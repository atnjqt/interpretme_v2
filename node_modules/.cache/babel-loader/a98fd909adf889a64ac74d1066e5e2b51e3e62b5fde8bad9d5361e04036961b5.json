{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst IgnoreErrorModuleFactory = require(\"./IgnoreErrorModuleFactory\");\nconst WebpackIsIncludedDependency = require(\"./dependencies/WebpackIsIncludedDependency\");\nconst {\n  toConstantDependency\n} = require(\"./javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"enhanced-resolve/lib/Resolver\")} Resolver */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\nclass WebpackIsIncludedPlugin {\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"WebpackIsIncludedPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(WebpackIsIncludedDependency, new IgnoreErrorModuleFactory(normalModuleFactory));\n      compilation.dependencyTemplates.set(WebpackIsIncludedDependency, new WebpackIsIncludedDependency.Template());\n\n      /**\n       * @param {JavascriptParser} parser the parser\n       * @returns {void}\n       */\n      const handler = parser => {\n        parser.hooks.call.for(\"__webpack_is_included__\").tap(\"WebpackIsIncludedPlugin\", expr => {\n          if (expr.type !== \"CallExpression\" || expr.arguments.length !== 1 || expr.arguments[0].type === \"SpreadElement\") return;\n          const request = parser.evaluateExpression(expr.arguments[0]);\n          if (!request.isString()) return;\n          const dep = new WebpackIsIncludedDependency(request.string, expr.range);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n          return true;\n        });\n        parser.hooks.typeof.for(\"__webpack_is_included__\").tap(\"WebpackIsIncludedPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"WebpackIsIncludedPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"WebpackIsIncludedPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"WebpackIsIncludedPlugin\", handler);\n    });\n  }\n}\nmodule.exports = WebpackIsIncludedPlugin;","map":{"version":3,"names":["IgnoreErrorModuleFactory","require","WebpackIsIncludedDependency","toConstantDependency","WebpackIsIncludedPlugin","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","call","for","expr","type","arguments","length","request","evaluateExpression","isString","dep","string","range","loc","state","module","addDependency","typeof","JSON","stringify","exports"],"sources":["/Users/ritasabri/Desktop/PENN/interpretme_v2/node_modules/webpack/lib/WebpackIsIncludedPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst IgnoreErrorModuleFactory = require(\"./IgnoreErrorModuleFactory\");\nconst WebpackIsIncludedDependency = require(\"./dependencies/WebpackIsIncludedDependency\");\nconst {\n\ttoConstantDependency\n} = require(\"./javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"enhanced-resolve/lib/Resolver\")} Resolver */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\nclass WebpackIsIncludedPlugin {\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"WebpackIsIncludedPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tWebpackIsIncludedDependency,\n\t\t\t\t\tnew IgnoreErrorModuleFactory(normalModuleFactory)\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tWebpackIsIncludedDependency,\n\t\t\t\t\tnew WebpackIsIncludedDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {JavascriptParser} parser the parser\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.call\n\t\t\t\t\t\t.for(\"__webpack_is_included__\")\n\t\t\t\t\t\t.tap(\"WebpackIsIncludedPlugin\", expr => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpr.type !== \"CallExpression\" ||\n\t\t\t\t\t\t\t\texpr.arguments.length !== 1 ||\n\t\t\t\t\t\t\t\texpr.arguments[0].type === \"SpreadElement\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\tconst request = parser.evaluateExpression(expr.arguments[0]);\n\n\t\t\t\t\t\t\tif (!request.isString()) return;\n\n\t\t\t\t\t\t\tconst dep = new WebpackIsIncludedDependency(\n\t\t\t\t\t\t\t\trequest.string,\n\t\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"__webpack_is_included__\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"WebpackIsIncludedPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"WebpackIsIncludedPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"WebpackIsIncludedPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"WebpackIsIncludedPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = WebpackIsIncludedPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACtE,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,4CAA4C,CAAC;AACzF,MAAM;EACLE;AACD,CAAC,GAAGF,OAAO,CAAC,sCAAsC,CAAC;;AAEnD;AACA;AACA;AACA;;AAEA,MAAMG,uBAAuB,CAAC;EAC7B;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,yBAAyB,EACzB,CAACD,WAAW,EAAAE,IAAA,KAA8B;MAAA,IAA5B;QAAEC;MAAoB,CAAC,GAAAD,IAAA;MACpCF,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCX,2BAA2B,EAC3B,IAAIF,wBAAwB,CAACW,mBAAmB,CAAC,CACjD;MACDH,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClCX,2BAA2B,EAC3B,IAAIA,2BAA2B,CAACa,QAAQ,EAAE,CAC1C;;MAED;AACJ;AACA;AACA;MACI,MAAMC,OAAO,GAAGC,MAAM,IAAI;QACzBA,MAAM,CAACV,KAAK,CAACW,IAAI,CACfC,GAAG,CAAC,yBAAyB,CAAC,CAC9BV,GAAG,CAAC,yBAAyB,EAAEW,IAAI,IAAI;UACvC,IACCA,IAAI,CAACC,IAAI,KAAK,gBAAgB,IAC9BD,IAAI,CAACE,SAAS,CAACC,MAAM,KAAK,CAAC,IAC3BH,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAACD,IAAI,KAAK,eAAe,EAE1C;UAED,MAAMG,OAAO,GAAGP,MAAM,CAACQ,kBAAkB,CAACL,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;UAE5D,IAAI,CAACE,OAAO,CAACE,QAAQ,EAAE,EAAE;UAEzB,MAAMC,GAAG,GAAG,IAAIzB,2BAA2B,CAC1CsB,OAAO,CAACI,MAAM,EACdR,IAAI,CAACS,KAAK,CACV;UACDF,GAAG,CAACG,GAAG,GAAGV,IAAI,CAACU,GAAG;UAClBb,MAAM,CAACc,KAAK,CAACC,MAAM,CAACC,aAAa,CAACN,GAAG,CAAC;UACtC,OAAO,IAAI;QACZ,CAAC,CAAC;QACHV,MAAM,CAACV,KAAK,CAAC2B,MAAM,CACjBf,GAAG,CAAC,yBAAyB,CAAC,CAC9BV,GAAG,CACH,yBAAyB,EACzBN,oBAAoB,CAACc,MAAM,EAAEkB,IAAI,CAACC,SAAS,CAAC,UAAU,CAAC,CAAC,CACxD;MACH,CAAC;MACDzB,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BE,GAAG,CAAC,iBAAiB,CAAC,CACtBV,GAAG,CAAC,yBAAyB,EAAEO,OAAO,CAAC;MACzCL,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BE,GAAG,CAAC,oBAAoB,CAAC,CACzBV,GAAG,CAAC,yBAAyB,EAAEO,OAAO,CAAC;MACzCL,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BE,GAAG,CAAC,gBAAgB,CAAC,CACrBV,GAAG,CAAC,yBAAyB,EAAEO,OAAO,CAAC;IAC1C,CAAC,CACD;EACF;AACD;AAEAgB,MAAM,CAACK,OAAO,GAAGjC,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}