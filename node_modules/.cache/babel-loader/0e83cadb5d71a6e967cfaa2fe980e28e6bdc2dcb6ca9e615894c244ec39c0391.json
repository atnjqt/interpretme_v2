{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\nconst {\n  evaluateToString,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\nclass RequireEnsurePlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireEnsurePlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(RequireEnsureItemDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(RequireEnsureItemDependency, new RequireEnsureItemDependency.Template());\n      compilation.dependencyTemplates.set(RequireEnsureDependency, new RequireEnsureDependency.Template());\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireEnsure !== undefined && !parserOptions.requireEnsure) return;\n        new RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n        parser.hooks.evaluateTypeof.for(\"require.ensure\").tap(\"RequireEnsurePlugin\", evaluateToString(\"function\"));\n        parser.hooks.typeof.for(\"require.ensure\").tap(\"RequireEnsurePlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireEnsurePlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireEnsurePlugin\", handler);\n    });\n  }\n}\nmodule.exports = RequireEnsurePlugin;","map":{"version":3,"names":["RequireEnsureDependency","require","RequireEnsureItemDependency","RequireEnsureDependenciesBlockParserPlugin","evaluateToString","toConstantDependency","RequireEnsurePlugin","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireEnsure","undefined","evaluateTypeof","for","typeof","JSON","stringify","module","exports"],"sources":["/Users/ritasabri/Desktop/PENN/interpretme_v2/node_modules/webpack/lib/dependencies/RequireEnsurePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\n\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\n\nconst {\n\tevaluateToString,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nclass RequireEnsurePlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireEnsurePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnew RequireEnsureItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureDependency,\n\t\t\t\t\tnew RequireEnsureDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireEnsure !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireEnsure\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\"RequireEnsurePlugin\", evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"RequireEnsurePlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"RequireEnsurePlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireEnsurePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACpE,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAE5E,MAAME,0CAA0C,GAAGF,OAAO,CAAC,8CAA8C,CAAC;AAE1G,MAAM;EACLG,gBAAgB;EAChBC;AACD,CAAC,GAAGJ,OAAO,CAAC,uCAAuC,CAAC;AAEpD,MAAMK,mBAAmB,CAAC;EACzBC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,qBAAqB,EACrB,CAACD,WAAW,EAAAE,IAAA,KAA8B;MAAA,IAA5B;QAAEC;MAAoB,CAAC,GAAAD,IAAA;MACpCF,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCb,2BAA2B,EAC3BW,mBAAmB,CACnB;MACDH,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClCb,2BAA2B,EAC3B,IAAIA,2BAA2B,CAACe,QAAQ,EAAE,CAC1C;MAEDP,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClCf,uBAAuB,EACvB,IAAIA,uBAAuB,CAACiB,QAAQ,EAAE,CACtC;MAED,MAAMC,OAAO,GAAGA,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1C,IACCA,aAAa,CAACC,aAAa,KAAKC,SAAS,IACzC,CAACF,aAAa,CAACC,aAAa,EAE5B;QAED,IAAIlB,0CAA0C,EAAE,CAACI,KAAK,CAACY,MAAM,CAAC;QAC9DA,MAAM,CAACV,KAAK,CAACc,cAAc,CACzBC,GAAG,CAAC,gBAAgB,CAAC,CACrBb,GAAG,CAAC,qBAAqB,EAAEP,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAC1De,MAAM,CAACV,KAAK,CAACgB,MAAM,CACjBD,GAAG,CAAC,gBAAgB,CAAC,CACrBb,GAAG,CACH,qBAAqB,EACrBN,oBAAoB,CAACc,MAAM,EAAEO,IAAI,CAACC,SAAS,CAAC,UAAU,CAAC,CAAC,CACxD;MACH,CAAC;MAEDd,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAAC,iBAAiB,CAAC,CACtBb,GAAG,CAAC,qBAAqB,EAAEO,OAAO,CAAC;MACrCL,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAAC,oBAAoB,CAAC,CACzBb,GAAG,CAAC,qBAAqB,EAAEO,OAAO,CAAC;IACtC,CAAC,CACD;EACF;AACD;AACAU,MAAM,CAACC,OAAO,GAAGvB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}