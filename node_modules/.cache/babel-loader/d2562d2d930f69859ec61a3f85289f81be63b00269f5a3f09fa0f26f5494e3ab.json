{"ast":null,"code":"const dotenv = require('dotenv');\n\n/**\n * Merges two objects.\n * @param {Object} apply - The overwriter\n * @param {Object} defaults - The defaults to be overwritten\n * @returns {Object} The merged results.\n */\nconst merge = function () {\n  let apply = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Object.assign({}, defaults, apply);\n};\n\n/**\n * Parses objects like before, but with defaults!\n * @param {String} src - The original src.\n * @param {String} [defaultSrc=''] - The new-and-improved default source.\n * @returns {Object} The parsed results.\n */\nconst parse = function (src) {\n  let defaultSrc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const parsedSrc = dotenv.parse(src);\n  const parsedDefault = dotenv.parse(defaultSrc);\n  return merge(parsedSrc, parsedDefault);\n};\n\n/**\n * Runs the configurations and applies it to process.env.\n * @param {Object} [options={}] - The options to determnie how this goes\n * @returns {Object} The parsed results.\n */\nconst config = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const src = dotenv.config(options);\n  // we run this second so it doesn't override things set from src\n  const defaults = dotenv.config(Object.assign({}, options, {\n    path: options.defaults || '.env.defaults'\n  }));\n  return {\n    parsed: merge(src.parsed, defaults.parsed)\n  };\n};\nmodule.exports = {\n  parse,\n  config\n};","map":{"version":3,"names":["dotenv","require","merge","apply","arguments","length","undefined","defaults","Object","assign","parse","src","defaultSrc","parsedSrc","parsedDefault","config","options","path","parsed","module","exports"],"sources":["/Users/ritasabri/Desktop/PENN/interpretme_v2/node_modules/dotenv-defaults/src/index.js"],"sourcesContent":["const dotenv = require('dotenv')\n\n/**\n * Merges two objects.\n * @param {Object} apply - The overwriter\n * @param {Object} defaults - The defaults to be overwritten\n * @returns {Object} The merged results.\n */\nconst merge = (apply = {}, defaults = {}) => Object.assign({}, defaults, apply)\n\n/**\n * Parses objects like before, but with defaults!\n * @param {String} src - The original src.\n * @param {String} [defaultSrc=''] - The new-and-improved default source.\n * @returns {Object} The parsed results.\n */\nconst parse = (src, defaultSrc = '') => {\n  const parsedSrc = dotenv.parse(src)\n  const parsedDefault = dotenv.parse(defaultSrc)\n\n  return merge(parsedSrc, parsedDefault)\n}\n\n/**\n * Runs the configurations and applies it to process.env.\n * @param {Object} [options={}] - The options to determnie how this goes\n * @returns {Object} The parsed results.\n */\nconst config = (options = {}) => {\n  const src = dotenv.config(options)\n  // we run this second so it doesn't override things set from src\n  const defaults = dotenv.config(Object.assign({}, options, {\n    path: options.defaults || '.env.defaults'\n  }))\n\n  return {\n    parsed: merge(src.parsed, defaults.parsed)\n  }\n}\n\nmodule.exports = {\n  parse,\n  config\n}\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAG,SAAAA,CAAA;EAAA,IAACC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OAAKI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,QAAQ,EAAEJ,KAAK,CAAC;AAAA;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA,MAAMO,KAAK,GAAG,SAAAA,CAACC,GAAG,EAAsB;EAAA,IAApBC,UAAU,GAAAR,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACjC,MAAMS,SAAS,GAAGb,MAAM,CAACU,KAAK,CAACC,GAAG,CAAC;EACnC,MAAMG,aAAa,GAAGd,MAAM,CAACU,KAAK,CAACE,UAAU,CAAC;EAE9C,OAAOV,KAAK,CAACW,SAAS,EAAEC,aAAa,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAG,SAAAA,CAAA,EAAkB;EAAA,IAAjBC,OAAO,GAAAZ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC1B,MAAMO,GAAG,GAAGX,MAAM,CAACe,MAAM,CAACC,OAAO,CAAC;EAClC;EACA,MAAMT,QAAQ,GAAGP,MAAM,CAACe,MAAM,CAACP,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEO,OAAO,EAAE;IACxDC,IAAI,EAAED,OAAO,CAACT,QAAQ,IAAI;EAC5B,CAAC,CAAC,CAAC;EAEH,OAAO;IACLW,MAAM,EAAEhB,KAAK,CAACS,GAAG,CAACO,MAAM,EAAEX,QAAQ,CAACW,MAAM;EAC3C,CAAC;AACH,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EACfV,KAAK;EACLK;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}