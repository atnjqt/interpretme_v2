{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst {\n  pathToFileURL\n} = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n  evaluateToIdentifier,\n  toConstantDependency,\n  evaluateToString,\n  evaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst getCriticalDependencyWarning = memoize(() => require(\"./CriticalDependencyWarning\"));\nclass ImportMetaPlugin {\n  /**\n   * @param {Compiler} compiler compiler\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"ImportMetaPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      /**\n       * @param {NormalModule} module module\n       * @returns {string} file url\n       */\n      const getUrl = module => {\n        return pathToFileURL(module.resource).toString();\n      };\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const parserHandler = (parser, _ref2) => {\n        let {\n          importMeta\n        } = _ref2;\n        if (importMeta === false) {\n          const {\n            importMetaName\n          } = compilation.outputOptions;\n          if (importMetaName === \"import.meta\") return;\n          parser.hooks.expression.for(\"import.meta\").tap(\"ImportMetaPlugin\", metaProperty => {\n            const dep = new ConstDependency(importMetaName, metaProperty.range);\n            dep.loc = metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          });\n          return;\n        }\n\n        /// import.meta direct ///\n        parser.hooks.typeof.for(\"import.meta\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(\"object\")));\n        parser.hooks.expression.for(\"import.meta\").tap(\"ImportMetaPlugin\", metaProperty => {\n          const CriticalDependencyWarning = getCriticalDependencyWarning();\n          parser.state.module.addWarning(new ModuleDependencyWarning(parser.state.module, new CriticalDependencyWarning(\"Accessing import.meta directly is unsupported (only property access is supported)\"), metaProperty.loc));\n          const dep = new ConstDependency(`${parser.isAsiPosition(metaProperty.range[0]) ? \";\" : \"\"}({})`, metaProperty.range);\n          dep.loc = metaProperty.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta\").tap(\"ImportMetaPlugin\", evaluateToString(\"object\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta\").tap(\"ImportMetaPlugin\", evaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true));\n\n        /// import.meta.url ///\n        parser.hooks.typeof.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(\"string\")));\n        parser.hooks.expression.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", expr => {\n          const dep = new ConstDependency(JSON.stringify(getUrl(parser.state.module)), expr.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", evaluateToString(\"string\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.url\").tap(\"ImportMetaPlugin\", expr => {\n          return new BasicEvaluatedExpression().setString(getUrl(parser.state.module)).setRange(expr.range);\n        });\n\n        /// import.meta.webpack ///\n        const webpackVersion = parseInt(require(\"../../package.json\").version, 10);\n        parser.hooks.typeof.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(\"number\")));\n        parser.hooks.expression.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", toConstantDependency(parser, JSON.stringify(webpackVersion)));\n        parser.hooks.evaluateTypeof.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", evaluateToString(\"number\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.webpack\").tap(\"ImportMetaPlugin\", evaluateToNumber(webpackVersion));\n\n        /// Unknown properties ///\n        parser.hooks.unhandledExpressionMemberChain.for(\"import.meta\").tap(\"ImportMetaPlugin\", (expr, members) => {\n          const dep = new ConstDependency(`${Template.toNormalComment(\"unsupported import.meta.\" + members.join(\".\"))} undefined${propertyAccess(members, 1)}`, expr.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluate.for(\"MemberExpression\").tap(\"ImportMetaPlugin\", expression => {\n          const expr = /** @type {MemberExpression} */expression;\n          if (expr.object.type === \"MetaProperty\" && expr.object.meta.name === \"import\" && expr.object.property.name === \"meta\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\n            return new BasicEvaluatedExpression().setUndefined().setRange(expr.range);\n          }\n        });\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportMetaPlugin\", parserHandler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportMetaPlugin\", parserHandler);\n    });\n  }\n}\nmodule.exports = ImportMetaPlugin;","map":{"version":3,"names":["pathToFileURL","require","ModuleDependencyWarning","Template","BasicEvaluatedExpression","evaluateToIdentifier","toConstantDependency","evaluateToString","evaluateToNumber","memoize","propertyAccess","ConstDependency","getCriticalDependencyWarning","ImportMetaPlugin","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","getUrl","module","resource","toString","parserHandler","parser","_ref2","importMeta","importMetaName","outputOptions","expression","for","metaProperty","dep","range","loc","state","addPresentationalDependency","typeof","JSON","stringify","CriticalDependencyWarning","addWarning","isAsiPosition","evaluateTypeof","evaluateIdentifier","expr","setString","setRange","webpackVersion","parseInt","version","unhandledExpressionMemberChain","members","toNormalComment","join","evaluate","object","type","meta","name","property","computed","setUndefined","exports"],"sources":["/Users/ritasabri/Desktop/PENN/interpretme_v2/node_modules/webpack/lib/dependencies/ImportMetaPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { pathToFileURL } = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToIdentifier,\n\ttoConstantDependency,\n\tevaluateToString,\n\tevaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst getCriticalDependencyWarning = memoize(() =>\n\trequire(\"./CriticalDependencyWarning\")\n);\n\nclass ImportMetaPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ImportMetaPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {NormalModule} module module\n\t\t\t\t * @returns {string} file url\n\t\t\t\t */\n\t\t\t\tconst getUrl = module => {\n\t\t\t\t\treturn pathToFileURL(module.resource).toString();\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst parserHandler = (parser, { importMeta }) => {\n\t\t\t\t\tif (importMeta === false) {\n\t\t\t\t\t\tconst { importMetaName } = compilation.outputOptions;\n\t\t\t\t\t\tif (importMetaName === \"import.meta\") return;\n\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", metaProperty => {\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\timportMetaName,\n\t\t\t\t\t\t\t\t\tmetaProperty.range\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = metaProperty.loc;\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t/// import.meta direct ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", metaProperty => {\n\t\t\t\t\t\t\tconst CriticalDependencyWarning = getCriticalDependencyWarning();\n\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\tnew ModuleDependencyWarning(\n\t\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\tnew CriticalDependencyWarning(\n\t\t\t\t\t\t\t\t\t\t\"Accessing import.meta directly is unsupported (only property access is supported)\"\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tmetaProperty.loc\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t`${parser.isAsiPosition(metaProperty.range[0]) ? \";\" : \"\"}({})`,\n\t\t\t\t\t\t\t\tmetaProperty.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = metaProperty.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToString(\"object\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier.for(\"import.meta\").tap(\n\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\tevaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true)\n\t\t\t\t\t);\n\n\t\t\t\t\t/// import.meta.url ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"string\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", expr => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\tJSON.stringify(getUrl(parser.state.module)),\n\t\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToString(\"string\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", expr => {\n\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(getUrl(parser.state.module))\n\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t/// import.meta.webpack ///\n\t\t\t\t\tconst webpackVersion = parseInt(\n\t\t\t\t\t\trequire(\"../../package.json\").version,\n\t\t\t\t\t\t10\n\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"number\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"ImportMetaPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(webpackVersion))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToString(\"number\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", evaluateToNumber(webpackVersion));\n\n\t\t\t\t\t/// Unknown properties ///\n\t\t\t\t\tparser.hooks.unhandledExpressionMemberChain\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", (expr, members) => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t`${Template.toNormalComment(\n\t\t\t\t\t\t\t\t\t\"unsupported import.meta.\" + members.join(\".\")\n\t\t\t\t\t\t\t\t)} undefined${propertyAccess(members, 1)}`,\n\t\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluate\n\t\t\t\t\t\t.for(\"MemberExpression\")\n\t\t\t\t\t\t.tap(\"ImportMetaPlugin\", expression => {\n\t\t\t\t\t\t\tconst expr = /** @type {MemberExpression} */ (expression);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpr.object.type === \"MetaProperty\" &&\n\t\t\t\t\t\t\t\texpr.object.meta.name === \"import\" &&\n\t\t\t\t\t\t\t\texpr.object.property.name === \"meta\" &&\n\t\t\t\t\t\t\t\texpr.property.type ===\n\t\t\t\t\t\t\t\t\t(expr.computed ? \"Literal\" : \"Identifier\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t\t.setUndefined()\n\t\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportMetaPlugin\", parserHandler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportMetaPlugin\", parserHandler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}